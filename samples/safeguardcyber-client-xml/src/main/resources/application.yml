server:
  port: 8086

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
#    org.springframework.boot.autoconfigure: DEBUG

spring:
  thymeleaf:
    cache: false

messages:
  base-uri: http://127.0.0.1:8080/safeguard/api/v1/settings/global

auth0:
  # REPLACE TENANT_NAME BY YOUR VALUE
  issuer-uri: https://TENANT_NAME.us.auth0.com/
  token-uri: ${auth0.issuer-uri}/oauth/token
  client-id: urPJLUMFwkjRfruDfYHOHJi2aLM4a4bb
  client-secret: NwLwsq2LSwSCFAxv3uMQmUN2C9z0uGQOO1hVFtyi_XdXn5yVxHts_Jwatnc6qL8q

keycloak:
  token-uri: http://127.0.0.1:8180/realms/master/protocol/openid-connect/token
  client-id: messaging-client
  client-secret: pWXfiOeieGErbZFSOeaeJa8b8maBikwq

spring-as:
  token-uri: http://127.0.0.1:9000/oauth2/token
  client-id: safeguard-client
  client-secret: safeguardSecret

### For empty value of token-uri below, no token will be created explicitly ###
sgc:
  token-uri: http://127.0.0.1:8080/safeguard/api/oauth/token
### Set token-uri to empty for implicit token creation
#token-uri:
### Set token-uri to non-empty for explicit token creation
token-uri: ${sgc.token-uri}

### Uncomment below for Auth0 ###
# token-uri below gives 401 UNAUTHORIZED from POST to Auth0 but works if token-uri=${sgc.token-uri}
#token-uri: ${auth0.token-uri}
client-id: ${auth0.client-id}
client-secret: ${auth0.client-secret}

### Uncomment below for keycloak ###
#token-uri: ${keycloak.token-uri}
#client-id: ${keycloak.client-id}
#client-secret: ${keycloak.client-secret}

### Uncomment below for Spring AS ###
#token-uri: ${spring-as.token-uri}
#client-id: ${spring-as.client-id}
#client-secret: ${spring-as.client-secret}
